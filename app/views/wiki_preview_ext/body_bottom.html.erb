<%
	controller2param = {
		"WikiController" => {
			:url2preview => lambda {url_for(:controller => 'wiki', :action => 'preview', :project_id => @project, :id => @page.title)},
			:form_id2serialize => "wiki_form",
			:id2auto_preview_field => "content_text",
			:decision => lambda {
				if context[:controller].action_name == "edit" ||
					(context[:controller].action_name == "show" && @page.new_record?)
					return true
				end
				return false
			}
		},
	}


	key = "#{context[:controller].class.name}"
	param = controller2param[key]

	auto_preview_duration = Setting.plugin_redmine_wiki_preview_ext['preview_duration'].to_f
%>

<% if !param.nil? && param[:decision].call %>

<script type="text/javascript">
<!--
$(document).ready(function() {
	var toolbar = $("div.jstElements");
	var preview = $("#preview");
	if (toolbar.length < 1 || preview.length < 1) {
		return;
	}

	var preview_here = $("<a/>")
		.attr({
			id: "preview-here",
			href: "#"
		})
		.text('<%=j h t :preview_here%>');

	toolbar.append(preview_here);

	preview.css({
		cursor: "move",
	});
		
	preview.draggable({
		cursor: "move",
		opacity: 0.8
	});

	var update_preview_area = function() {
		submitPreview(
			'<%=j h param[:url2preview].call %>', 
			'<%=j h param[:form_id2serialize] %>',
			"preview"
		);
	};

	var once_moved = false;
	preview_here.on('click', function() {
		if (!once_moved) {
			var preview_here_offset = $('#preview-here').offset();
			var preview_offset = $('#preview').offset();
			preview.animate({
				top: "+=" + (preview_here_offset.top - preview_offset.top + preview_here.height()),
				left: "+=" + (preview_here_offset.left - preview_offset.left),
				duration: 0.8
			});
			once_moved = true;
		}
		update_preview_area();

		return false;
	});

	<% if auto_preview_duration > 0 %>
	var	timer;
	var prev_val;
	var field_to_watch = $("#<%=j h param[:id2auto_preview_field] %>");
	var reset_timer = function(duration) {
		if (timer != undefined) {
			clearTimeout(timer);
		}

		timer = setTimeout(function() {
			var current_val = field_to_watch.val();
			if (prev_val != current_val) {
				update_preview_area();
				prev_val = current_val;
			};
		}, duration);
	};

	field_to_watch.bind("keyup click mousemove", function() { 
			reset_timer(<%=j h auto_preview_duration %> * 1000); 
		});
	<% end %>
});
-->
</script>

<% end %>

